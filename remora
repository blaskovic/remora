#!/usr/bin/env ruby

disable_dbus = ARGV.delete '--no-dbus'
disable_drb = ARGV.delete '--no-drb'

require 'drb' unless disable_drb
require File.join(File.dirname(__FILE__), 'dbus-interface') unless disable_dbus

if ARGV.any?
  if ARGV.delete 'nowplaying'
    DRb.start_service
    begin
      client = DRbObject.new nil, 'druby://localhost:68739'
      info = client.now_playing
      if info
        puts "#{info['SongName'] || info['Name']} - #{info['ArtistName']} - #{info['AlbumName']}"
      else
        puts "No song is playing"
      end
    rescue DRb::DRbConnError
      puts "Remora is not running"
    end
    exit
  end

end

require File.join(File.dirname(__FILE__), 'client')
require File.join(File.dirname(__FILE__), 'playlist')
require File.join(File.dirname(__FILE__), 'song')
require File.join(File.dirname(__FILE__), 'mplayer')
require File.join(File.dirname(__FILE__), 'ui')

client = GrooveShark::Client.new
$session = client.session

client.use_aoss = true if ARGV.delete '--use-aoss'

run_dbus client unless disable_dbus
DRb.start_service 'druby://localhost:68739', client unless disable_drb

load File.join(File.dirname(__FILE__), 'mpd.rb')
Thread.new {
  EventMachine.run {
    EventMachine::start_server "0.0.0.0", 8000, Remora::MPDConnection, client
  }
}

#~ puts "Enter a search query:"
#~ query = gets.chomp
#~ puts
#~ puts "Searching for \"#{query}\":"
#~ results = client.search_songs(query)['Return']
#~ results.each do |result|
  #~ puts "#{results.index result} - #{result['Name']} - #{result['ArtistName']} - #{result['AlbumName']}"
#~ end
#~ 
#~ puts
#~ puts "Please type in a song index to [attempt to] play it:"
#~ index = gets.to_i
#~ 
#~ client.queue << results[index]
#~ Thread.new do
  #~ client.queue.play_radio
#~ end

$display = display = client.display = Remora::UI::Display.new(client)

trap 'INT' do
  display.undo_modes
  exit
end

begin
  
  def show_login display
    display.active_control = display.panes[:login].controls[:user]
    display.panes[:login].show!
    display.dirty! :login
  end
  
  display.pane :queue, 1, 1, 20, -1, 'Queue' do
    control :songs, Remora::UI::ListBox, 1, 1, -1, -1 do
      number!
    end
  end

  display.pane :main, 20, 1, -1, -15, 'Search results' do
    display.active_control = control :search, Remora::UI::TextBox, 2, 1, -2, 1 do
      self.label = 'Search'
      self.text = ''
    end
    control :results, Remora::UI::ListBox, 1, 2, -1, -1 do
      number!
    end
  end

  display.pane :log, 20, -15, -1, -5, 'MPlayer Output' do
    control :output, Remora::UI::ListBox, 2, 1, -2, -1
  end

  display.pane :np, 20, -5, -1, -1, 'Now playing' do
    control :song_name, Remora::UI::Label, 1, 1, -1, 1 do
      align :center
    end
    control :cue, Remora::UI::DoubleProgressBar, 2, 2, -2, 3 do
      template '==>->  '
    end
    control :position, Remora::UI::Label, 1, 3, -1, 3
  end
  
  $results = nil
  display.panes[:main].controls[:search].on_submit do |box, query|
    next if query.empty?
	
    if query.to_i.to_s == query && $results
      index = query.to_i - 1
      next if index < 0 || index > $results.size
      
      song = $results[index]
      client.queue << song
      
      unless client.now_playing
        Thread.new do
          begin
            client.queue.play_radio
          rescue => ex
            display.undo_modes
            puts ex.class, ex.message, ex.backtrace
            exit
          end
        end
      end
    elsif query == '/pause'
      client.player && client.player.pause
    elsif query == '/stop'
      client.player && client.player.stop
    elsif query == '/login'
      show_login display
    elsif query =~ /^\/player (.+)$/
      client.player && client.player.process.puts($1)
    elsif query =~ /^\/raw ([^ ]+) ([^ ]+) (.*)$/
      $results = nil
      display.panes[:main].controls[:results].data = client.request($1, $2, eval($3)).inspect.lines.to_a.map{|l| l.chomp}
      display.panes[:main].title = "Results for #{$2} to #{$1}"
      display.dirty! :main
    else
      $results = client.search_songs(query)
      display.panes[:main].controls[:results].data = $results.map {|song| song.to_s }
      display.panes[:main].title = "Search Results for #{query}"
      display.dirty! :main
    end
  end

  display.alert :login, 30, 8, 'Login to Grooveshark' do
    hide!
    
    control :user, Remora::UI::TextBox, 3, 2, -3, 2 do
      self.label = 'Username'
      self.text = ''
    end
    control :pass, Remora::UI::TextBox, 3, 4, -3, 4 do
      self.label = 'Password'
      self.text = ''
      self.mask = '*'
    end
    control :submit, Remora::UI::Button, 10, 6, -10, 6 do
      self.text = 'Login'
      self.alignment = :center
    end
      
    on_submit do
      creds = yank_values
      
      display.panes[:login].hide!
      display.dirty!
      
      client.auth creds[:user], creds[:pass]
      
      $results = client.fetch_favorites
      display.panes[:main].controls[:results].data = $results.map {|fav| fav.to_s }
      display.panes[:main].title = "Your Favorites"
      
      display.active_control = display.panes[:main].controls[:search]
      display.dirty!
    end
  end

  display.handle while sleep 0.01

rescue => ex
  display.undo_modes
  puts ex.class, ex.message, ex.backtrace
  exit
end
